function e(e,t){if(0===t.length)return e;for(let n=0;n<t.length;n++)if(t[n].value===e)return e;return t[0].value}function t(e){const t=[];for(let n=0;n<e.length;n++){const r=e[n];t.push({label:r.key,value:r.key})}return t}function n(e,t){const n=[];for(let r=0;r<e.length;r++){const l=e[r];if(l.key===t)for(let e=0;e<l.values.length;e++)n.push({label:l.values[e],value:l.values[e]})}return n}function r(e){return e.replaceAll("_","/")}function l(e){if(void 0===e||""===e)return null;const t=e.split("/");if(7!==t.length)return null;const n={cluster:t[2],svr:t[3]},r=parseInt(t[1],10);if(!isNaN(r))return n.cluster=t[1],n;const l=parseInt(t[2],10),s=parseInt(t[4],10);return isNaN(r)&&isNaN(l)&&!isNaN(s)?(n.cluster=t[4],n):isNaN(r)&&isNaN(l)?(n.cluster=t[1]+"-"+t[2],n):n}export{n as a,l as b,r as c,t as g,e as p};
